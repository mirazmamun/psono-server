before_script:
  - docker info
  - echo $CI_BUILD_TOKEN | docker login --username=gitlab-ci-token --password-stdin registry.gitlab.com
  - echo $artifactory_credentials | docker login --username=gitlab --password-stdin psono-docker.jfrog.io
  - echo $docker_hub_credentials | docker login --username=psonogitlab --password-stdin

variables:
  CONTAINER_TEST_IMAGE: psono-docker.jfrog.io/psono/psono-server:$CI_BUILD_REF_NAME
  CONTAINER_LATEST_IMAGE: psono-docker.jfrog.io/psono/psono-server:latest

stages:
  - build
  - test
  - release
  - deploy

build-container-alpine:
  except:
    - schedules
  stage: build
  image: psono-docker.jfrog.io/docker:git
  services:
    - docker:dind
  script:
    - sh ./var/update_version.sh
    - docker build -f DockerfileAlpine -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE


run-unittests-ubuntu1604:
  except:
    - schedules
  stage: test
  image: psono-docker.jfrog.io/docker:git
  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: ""
    PSONO_EMAIL_HOST: 172.17.0.1
    PSONO_EMAIL_FROM: test@example.com
    PSONO_ACTIVATION_LINK_SECRET: 9SruC2qPmKScVzGaF4378LW4rvNNkK2G3Gddqy9kPQqgkjeDQjs7jaLBCstgtJTt
    PSONO_SECRET_KEY: RQTKawYQv4w6KkuphcLzLu7r5ap7xE5DSDu5SkKXjMnWBQ93mcMKjdZfeZkY2Y7C
  services:
    - docker:dind
  script:
    - sh ./var/update_version.sh
    - docker build -f DockerfileUbuntu1604 -t ubu1604-testimage .
    - docker run -d --name db postgres:9.6
    - sleep 20
    - docker run --link db:postgres ubu1604-testimage bash -c "apt-get update && apt-get install -y python3-pip && pip3 install -r requirements-dev.txt && pip3 install mypy && python3 /usr/local/bin/mypy -p psono --ignore-missing-imports && python3 ./psono/manage.py presetup && python3 ./psono/manage.py migrate && coverage3 run --source='.' ./psono/manage.py test restapi.tests && coverage3 report --omit=psono/restapi/migrations/*,psono/middleware/*,psono/restapi/tests*"


run-unittests-alpine:
  except:
    - schedules
  stage: test
  image: psono-docker.jfrog.io/docker:git
  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: ""
    PSONO_EMAIL_HOST: 172.17.0.1
    PSONO_EMAIL_FROM: test@example.com
    PSONO_ACTIVATION_LINK_SECRET: 9SruC2qPmKScVzGaF4378LW4rvNNkK2G3Gddqy9kPQqgkjeDQjs7jaLBCstgtJTt
    PSONO_SECRET_KEY: RQTKawYQv4w6KkuphcLzLu7r5ap7xE5DSDu5SkKXjMnWBQ93mcMKjdZfeZkY2Y7C
  services:
    - docker:dind
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run -d --name db postgres:9.6
    - sleep 20
    - docker run --link db:postgres $CONTAINER_TEST_IMAGE /bin/sh -c "pip3 install -r requirements-dev.txt && python3 ./psono/manage.py presetup && python3 ./psono/manage.py migrate && coverage3 run --source='.' ./psono/manage.py test restapi.tests && coverage3 report --omit=psono/restapi/migrations/*,psono/middleware/*,psono/restapi/tests*"


run-unittests-centos7:
  except:
    - schedules
  stage: test
  image: psono-docker.jfrog.io/docker:git
  variables:
    POSTGRES_DB: postgres
    POSTGRES_USER: postgres
    POSTGRES_PASSWORD: ""
    PSONO_EMAIL_HOST: 172.17.0.1
    PSONO_EMAIL_FROM: test@example.com
    PSONO_ACTIVATION_LINK_SECRET: 9SruC2qPmKScVzGaF4378LW4rvNNkK2G3Gddqy9kPQqgkjeDQjs7jaLBCstgtJTt
    PSONO_SECRET_KEY: RQTKawYQv4w6KkuphcLzLu7r5ap7xE5DSDu5SkKXjMnWBQ93mcMKjdZfeZkY2Y7C
  services:
    - docker:dind
  script:
    - sh ./var/update_version.sh
    - docker build -f DockerfileCentos7 -t centos7-testimage .
    - docker run -d --name db postgres:9.6
    - sleep 20
    - docker run --link db:postgres centos7-testimage bash -c "yum -y install python34-pip && pip3 install -r requirements-dev.txt && pip3 install mypy && python3 /usr/bin/mypy -p psono --ignore-missing-imports && python3 ./psono/manage.py presetup && python3 ./psono/manage.py migrate && coverage3 run --source='.' ./psono/manage.py test restapi.tests && coverage3 report --omit=psono/restapi/migrations/*,psono/middleware/*,psono/restapi/tests*"


run-vulnerability-scan:
  except:
    - schedules
  stage: test
  image: psono-docker.jfrog.io/docker:git
  services:
    - docker:dind
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run -e "LANG=C.UTF-8" $CONTAINER_TEST_IMAGE sh -c "pip3 install safety && safety check"

deploy-security-scan-image:
  except:
    - schedules
  stage: deploy
  image: psono-docker.jfrog.io/docker:git
  services:
    - docker:dind
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE psono/security-scans:psono-server-ce-$CI_BUILD_REF_NAME
    - docker push psono/security-scans:psono-server-ce-$CI_BUILD_REF_NAME

release-container:
  except:
    - schedules
  stage: release
  image: psono-docker.jfrog.io/docker:git
  services:
    - docker:dind
  script:
    - docker info
    - docker pull $CONTAINER_TEST_IMAGE
    - docker tag $CONTAINER_TEST_IMAGE $CONTAINER_LATEST_IMAGE
    - docker push $CONTAINER_LATEST_IMAGE
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/


deploy:
  except:
    - schedules
  stage: deploy
  image: psono-docker.jfrog.io/docker:git
  services:
    - docker:dind
  script:
    - sh ./var/deploy.sh
  environment:
    name: production
    url: https://psono.pw
  only:
    - /^v[0-9]*\.[0-9]*\.[0-9]*$/
