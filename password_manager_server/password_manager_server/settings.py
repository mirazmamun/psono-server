"""
Django settings for password_manager_server project.

Generated by 'django-admin startproject' using Django 1.8.3.

For more information on this file, see
https://docs.djangoproject.com/en/1.8/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.8/ref/settings/
"""

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
import os
import yaml
import json
HOME = os.path.expanduser('~')

with open(os.path.join(HOME, '.password_manager_server', 'settings.yaml'), 'r') as stream:
    config = yaml.load(stream)




def config_get(key, *args):
    if 'PSONO_' + key in os.environ:
        val = os.environ.get('PSONO_' + key)
        try:
            json_object = json.loads(val)
        except ValueError, e:
            return val
        return json_object
    if key in config:
        return config.get(key)
    if len(args) > 0:
        return args[0]
    raise Exception("Setting missing", "Couldn't find the setting for %s (maybe you forget the 'PSONO_' prefix in the environment variable" % (key,))

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.8/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config_get('SECRET_KEY')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = config_get('DEBUG')

ALLOWED_HOSTS = config_get('ALLOWED_HOSTS')


# Application definition

INSTALLED_APPS = (
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'corsheaders',
    'rest_framework',
    #'rest_framework.authtoken',
    #'rest_auth',
    #'allauth',
    #'allauth.account',
    #'rest_auth.registration',
    'restapi',
)

MIDDLEWARE_CLASSES = (
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.auth.middleware.SessionAuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'middleware.sqlprinter.SQLLogToConsoleMiddleware',
)

PASSWORD_HASHERS = (
    'django.contrib.auth.hashers.BCryptSHA256PasswordHasher',
    'django.contrib.auth.hashers.BCryptPasswordHasher',
    'django.contrib.auth.hashers.PBKDF2PasswordHasher',
    'django.contrib.auth.hashers.PBKDF2SHA1PasswordHasher',
    'django.contrib.auth.hashers.SHA1PasswordHasher',
    'django.contrib.auth.hashers.MD5PasswordHasher',
    'django.contrib.auth.hashers.CryptPasswordHasher',
)

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.IsAdminUser',),
    'PAGE_SIZE': 10
}

ROOT_URLCONF = 'password_manager_server.urls'
SITE_ID = 1

CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = (
        'GET',
        'POST',
        'PUT',
        'PATCH',
        'DELETE',
        'OPTIONS'
    )
CORS_ALLOW_HEADERS = (
        'x-requested-with',
        'content-type',
        'accept',
        'origin',
        'authorization',
        'x-csrftoken',
        'accept-encoding'
    )

TEMPLATES = config_get('TEMPLATES')

WSGI_APPLICATION = 'password_manager_server.wsgi.application'

# Database
# https://docs.djangoproject.com/en/1.8/ref/settings/#databases

DATABASES = config_get('DATABASES')

for db_name, db_values in DATABASES.iteritems():
    for db_configname, db_value in db_values.iteritems():
        DATABASES[db_name][db_configname] = config_get('DATABASES_' + db_name.upper() + '_' + db_configname.upper(), DATABASES[db_name][db_configname])


EMAIL_FROM = config_get('EMAIL_FROM')
EMAIL_HOST = config_get('EMAIL_HOST', 'localhost')
EMAIL_HOST_USER = config_get('EMAIL_HOST_USER', '')
EMAIL_HOST_PASSWORD = config_get('EMAIL_HOST_PASSWORD', '')
EMAIL_PORT = config_get('EMAIL_PORT', 25)
EMAIL_SUBJECT_PREFIX = config_get('EMAIL_SUBJECT_PREFIX', '')
EMAIL_USE_TLS = config_get('EMAIL_USE_TLS', False)
EMAIL_USE_SSL = config_get('EMAIL_USE_SSL', False)
EMAIL_SSL_CERTFILE = config_get('EMAIL_SSL_CERTFILE', None)
EMAIL_SSL_KEYFILE = config_get('EMAIL_SSL_KEYFILE', None)
EMAIL_TIMEOUT = config_get('EMAIL_TIMEOUT', None)

AUTH_KEY_LENGTH_BYTES = config_get('AUTH_KEY_LENGTH_BYTES', 64)
USER_PRIVATE_KEY_LENGTH_BYTES = config_get('USER_PRIVATE_KEY_LENGTH_BYTES', 80)
USER_PUBLIC_KEY_LENGTH_BYTES = config_get('USER_PUBLIC_KEY_LENGTH_BYTES', 32)
USER_SECRET_KEY_LENGTH_BYTES = config_get('USER_SECRET_KEY_LENGTH_BYTES', 80)
NONCE_LENGTH_BYTES = config_get('NONCE_LENGTH_BYTES', 24)
ACTIVATION_LINK_SECRET = config_get('ACTIVATION_LINK_SECRET')
ACTIVATION_LINK_TIME_VALID = config_get('ACTIVATION_LINK_TIME_VALID', 2592000) # in seconds
TOKEN_TIME_VALID = config_get('TOKEN_TIME_VALID', 86400) # in seconds

# Internationalization
# https://docs.djangoproject.com/en/1.8/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.8/howto/static-files/
STATIC_ROOT = os.path.join(BASE_DIR, "static/")
STATIC_URL = '/static/'
